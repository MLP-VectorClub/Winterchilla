@use "sass:color";
@import "vars";

$_TBase: #0c70b1;
$TDefault: gray;
$TCategory: $_TBase;
$TSpecies: color.adjust($_TBase, $hue: -80);
$TGender: color.adjust($_TBase, $hue: 60);
$TClothing: color.adjust($_TBase, $hue: 120);
$TWarning: color.adjust($_TBase, $hue: 160);
$TEpisode: color.adjust($_TBase, $hue: 190);
$TCharacter: color.adjust($_TBase, $hue: 240);

@mixin tag-style($color:$TDefault, $icon:false) {
  color: color.adjust($color, $lightness: -5%) !important;
  background-color: color.adjust($color, $lightness: 50%) !important;
  @if ($icon != false) {
    &:before {
      content: $icon
    }
  }
}

@mixin tag-button-style($color:$TDefault) {
  button {
    background-color: color.adjust($color, $lightness: -5%);
    color: color.adjust($color, $lightness: 50%);
  }
}

@mixin colored-square($size:16px, $border:1px) {
  display: inline-block;
  border: $border solid #000;
  width: #{$size - $border*2};
  height: #{$size - $border*2};
  font-size: 0;
  transform: scale(1);
  border-radius: 2px;
  will-change: transform, box-shadow;

  &:not(:empty) {
    cursor: pointer;

    &:active {
      transform: scale(.9)
    }

    &:hover {
      box-shadow: 0 0 0 1px black, inset 0 0 0 1px white;
    }
  }
  &:empty {
    background: url('/img/transparency.svg');
    background-size: 16px;
  }
}

@mixin clrp-invalid($fontSize:24px) {
  background: url('/img/transparency.svg');
  background-size: 16px;
}

%clr {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  width: 100%;
  overflow: hidden;
  background: #fff;

  &.draggable-source--is-dragging {
    opacity: 0;
  }

  &.draggable-mirror {
    width: 400px;
    max-width: 100%;
  }

  $height: 31px;

  .clrmthd {
    flex: 0 0 auto;
    height: $height;
  }

  &.mthd-hex {
    .clrla, .clrlc {
      display: none;
    }
  }

  &.mthd-link {
    .clrp, .clri {
      display: none;
    }
  }

  .clrla, .clrlc {
    flex: 1 1 auto;
    min-width: 30%;
    height: $height;
  }

  .clrp {
    flex: 0 0 auto;
    display: block;
    border: 1px solid #000;
    height: $height;
    width: $height;
    box-sizing: border-box;
    transition: background-color .2s linear, border .2s linear;

    &.invalid {
      @include clrp-invalid
    }
  }

  .clri, .clrl {
    flex: 0 1 auto;
    width: 100%;
    background-image: none !important;
  }

  .clri {
    width: 70px;
    font-family: $monospace;
    height: $height;
    box-sizing: border-box;
    text-align: center;
  }

  .clrid {
    flex: 0 0 auto;
    font-size: .9em;
    padding-left: 8px;
    line-height: $height;
  }

  .clra {
    margin-left: 3px;
    flex: 0 0 auto;

    > *, > *:before {
      line-height: $height
    }

    .remove, .add {
      cursor: pointer
    }

    .move {
      cursor: ns-resize
    }
  }

  &:first-child:last-child .clra .move {
    display: none;
  }
}

%colors-ul {
  padding: 0;
  list-style: none;

  @media all and (min-width: $Breakpoint) {
    display: flex;
    flex-flow: row wrap;
    justify-content: flex-start;

    li {
      margin: 5px;
      flex: 1 0 auto;
    }
  }

  li {
    padding: 10px;
    color: #434343;
    background-color: rgba(black, .07);
    border: 1px solid rgba(black, .2);
    font-size: 12px;
    font-family: 'Verdana', sans-serif;
    text-align: center;
    box-sizing: border-box;

    @media all and (max-width: $Breakpoint) {
      display: block;
      max-width: 100%;

      &:not(:last-child) {
        margin: 0 0 10px;
      }
    }

    > .cat {
      font-size: 2.2em;
      font-weight: bold;
      display: block;
      margin: 0 0 5px;
      font-family: $cursive;

      .admin {
        margin-top: 5px;
        display: block;
        font-size: .8em;

        button {
          margin: 0;

          &:not(:last-child) {
            margin-right: 5px
          }
        }
      }

      ~ span {
        @include colored-square(35px);
      }

      ~ .color-line {
        display: flex;

        &:not(:last-child) {
          margin-bottom: 5px;
        }

        > :first-child {
          display: block;
          flex: 0 0 35px;

          @include colored-square(35px);

          + span {
            display: block;
            flex: 1 1 auto;
            text-align: left;
            box-sizing: border-box;
            padding-left: 5px;

            .label {
              font-size: 20px;
              line-height: 35px;
              height: 35px;
              white-space: nowrap;
              overflow: hidden;
              text-overflow: ellipsis;
            }
          }
        }

        &:not(.no-detail) > :first-child + span {
          display: flex;
          flex-flow: column nowrap;

          .label {
            display: block;
            flex: 0 0 23px;
            line-height: 16px;
            height: 23px;
            font-size: 18px;
          }

          .ext {
            flex: 0 0 12px;
            display: block;
            line-height: 12px;
            height: 12px;
            font-size: 12px;
            white-space: nowrap;
          }
        }
      }
    }
  }
}

@mixin pony-cm {
  border: 1px solid #afafaf;
  background: #fff;
  margin: 5px;
  text-align: center;
  padding: 10px 5px;

  .title {
    font-size: 20px;
    display: block;
    font-weight: bold;
    //noinspection CssInvalidPropertyValue
    word-break: break-word;
    overflow: hidden;

    @media all and (min-width: $Breakpoint) {
      max-width: 250px;
    }

    + :not(.subtitle) {
      margin-top: 5px;
    }

    .cm-id {
      opacity: .4;

      &:before {
        content: "#"
      }
    }
  }

  .subtitle {
    display: block;
    font-size: 14px;
    margin-bottom: 5px;
  }

  .dl-links {
    font-size: 16px;
    margin: 5px 0;
  }

  .made-by {
    display: block;
    margin: 0;
    font-size: 18px;

    img {
      margin-right: .3em;
    }
  }
}

@mixin pony-cm-image($SquareSize: 250px) {
  display: block;
  width: $SquareSize;
  height: $SquareSize;
  position: relative;
  font-size: 0;
  margin: 0 auto;

  //noinspection CssOptimizeSimilarProperties
  .img {
    $CMSize: $SquareSize * 0.42;
    $margin: ($SquareSize - $CMSize)*0.5;

    position: absolute;
    top: $margin;
    left: $margin;
    width: $CMSize;
    height: $CMSize;

    background-repeat: no-repeat;
    background-position: center center;
    background-size: contain;
  }
}
